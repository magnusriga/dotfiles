# Get editor completions based on the config schema
"$schema" = 'https://starship.rs/config-schema.json'

# By default, promt has newline above it.
# Do not disable it, as that will leave prompts directly
# add_newline = false

continuation_prompt = '▶▶ '
# continuation_prompt = "[xxxx ](red bold)"
# continuation_prompt = "[▸▹ ](red bold)"

format = """
$username\
$hostname\
$localip\
[ ](#DA6771)\
${custom.directory-with-git}\
${custom.directory-without-git}\
$shlvl\
$singularity\
$kubernetes\
$vcsh\
$fossil_branch\
$fossil_metrics\
$git_branch\
$git_commit\
$git_state\
$git_metrics\
$git_status\
$hg_branch\
$character
"""

right_format = """
${custom.arrow}\
$pijul_channel\
$docker_context\
$package\
$c\
$cmake\
$cobol\
$daml\
$dart\
$deno\
$dotnet\
$elixir\
$elm\
$erlang\
$fennel\
$gleam\
$golang\
$guix_shell\
$haskell\
$haxe\
$helm\
$java\
$julia\
$kotlin\
$gradle\
$lua\
$nim\
$nodejs\
$ocaml\
$opa\
$perl\
$php\
$pulumi\
$purescript\
$python\
$quarto\
$raku\
$rlang\
$red\
$ruby\
$rust\
$scala\
$solidity\
$swift\
$terraform\
$typst\
$vlang\
$vagrant\
$zig\
$buf\
$nix_shell\
$conda\
$meson\
$spack\
$memory_usage\
$aws\
$gcloud\
$openstack\
$azure\
$nats\
$direnv\
$env_var\
$crystal\
$sudo\
$cmd_duration\
${custom.yazi}\
$jobs\
$battery\
$status\
$os\
$shell\
"""

# $cmd_duration\
# ${custom.yazi}\

# $line_break\
# $time\
# $container\

# ${custom.ssh_keys}\

# [custom.directory-with-git]
# command = 'echo hello' # shows output of command
# when = "~/.test_git.sh"
# format = ' transcending [$output]($style)'
# when = '''test"$PWD" = "$HOME"'''
# format = '[$output](bg:red)[](fg:red bg:yellow)'
# use_stdin = false
# [custom.zsh]
# command = "echo 🚀"
# when = "~/.test_zsh.sh"
# prefix = ""

# [character]
# success_symbol = "[>](bold green)"
# error_symbol = "[x](bold red)"
# vimcmd_symbol = "[<](bold green)"

[custom.arrow]
format = '[ ❮  ](bold fg:green)'
shell = ['zsh']
when = true
# disabled = true
# success_symbol = "[❮   ](bold green)"
# success_symbol = "[❮   ](bold red)"

[sudo]
format = "[$symbol]($style)"
style = "bold italic bright-purple"
symbol = "⋈┈"
disabled = false

[custom.ssh_keys]
description = "SSH key count"
shell = ['zsh']
# shell = ["bash", "--noprofile", "--norc"]
when = "ssh-add -l | grep -v -q 'no identities'"
command = "ssh-add -l | grep -v 'no identities' | wc -l"
format = "($symbol[$output]($style)) "
symbol = "🔑"
style = "bold fg:green"

# [custom.git_clean]
# format = "$symbol"
# symbol = "[](226)"
# when = """
# if git rev-parse --git-dir > /dev/null 2>&1; then
#   return 0
# else
#   return 1
# fi
# """

# [custom.foo]
# command = 'echo foo' # shows output of command
# detect_files = ['foo'] # can specify filters but wildcards are not supported
# when = ''' test "$HOME" = "$PWD" '''
# format = ' transcending [$output]($style)'

[custom.directory-with-git]
command = 'echo ${${PWD##*/}:-/}' # shows output of command
# format = '[$output](bg:red)[](fg:red)'
shell = ['zsh']
format = '[ $output ](bold bg:#DA6771 fg:#000000)[](fg:#DA6771 bg:yellow)'
when = """
if git rev-parse --git-dir > /dev/null 2>&1; then
  return 0
else
  return 1
fi
"""

[custom.directory-without-git]
command = 'echo ${${PWD##*/}:-/}' # shows output of command
shell = ['zsh']
format = '[ $output ](bold bg:#DA6771 fg:#000000)[ ](fg:#DA6771)'
when = """
if git rev-parse --git-dir > /dev/null 2>&1; then
  return 1
else
  return 0
fi
"""

[custom.yazi]
description = "Indicate the shell was launched by `yazi`"
shell = ['zsh']
symbol = " "
when = """ test -n "$YAZI_LEVEL" """

[username]
show_always = true
style_user = "bg:#DA6771"
style_root = "bg:#DA6771"
format = '[$user ]($style)'
disabled = true

[hostname]
show_always = true
style_user = "bg:#DA6771"
style_root = "bg:#DA6771"
format = '[$user ]($style)'
disabled = true

# An alternative to the username module which displays a symbol that
# represents the current operating system
[os]
style = "bg:#9A348E"
disabled = true      # Disabled by default

[directory]
style = "bold bg:#DA6771 fg:#000000"
format = "[ $path  ]($style)"
truncation_length = 1
# truncation_symbol = "…/"
# truncation_symbol = ""

# Here is how you can shorten some long paths by text replacement
# similar to mapped_locations in Oh My Posh:
[directory.substitutions]
"Documents" = "󰈙 "
"Downloads" = " "
"Music" = " "
"Pictures" = " "
# Keep in mind that the order matters. For example:
# "Important Documents" = " 󰈙 "
# will not be replaced, because "Documents" was already substituted before.
# So either put "Important Documents" before "Documents" or use the substituted version:
# "Important 󰈙 " = " 󰈙 "

[c]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[docker_context]
symbol = " "
style = "bg:#06969A"
format = '[ $symbol $context ]($style)'

[elixir]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[elm]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[git_branch]
symbol = ""
style = "bold bg:yellow fg:#000000"
format = '[ $symbol $branch [ ](fg:yellow bg:blue)]($style)'
disabled = false

# Could use `bg:#399EF4` instead of `bg:blue`.

[git_status]
conflicted = '🏳'
ahead = '🏎💨 ${count}'
behind = '😰 ${count}'
diverged = '🏎💨 ${ahead_count}, 😰 ${behind_count}'
up_to_date = '✓'
untracked = '🤷'
stashed = '📦'
modified = '📝'
staged = '[++\($count\)](bg:blue fg:white)'
renamed = '👅'
deleted = '🗑'
style = "bold bg:blue fg:#000000"
format = '[($conflicted | )($stashed | )($deleted | )($renamed | )($modified | )($typechanged | )($staged | )($untracked | )$ahead_behind [ ](fg:blue)]($style)'
disabled = false

[golang]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[gradle]
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[haskell]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[java]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[julia]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[nodejs]
# symbol = ""
# style = "bg:#86BBD8"
# format = '[ $symbol ($version) ]($style)'

[nim]
symbol = "󰆥 "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[rust]
symbol = ""
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[scala]
symbol = " "
style = "bg:#86BBD8"
format = '[ $symbol ($version) ]($style)'

[time]
disabled = false
time_format = "%R"             # Hour:Minute Format
style = "bg:#33658A"
format = '[ ♥ $time ]($style)'

[package]
format = '[🎁 $version](208 bold) '
display_private = true

[lua]
# format = " [lua](italic) [${symbol}${version}]($style)"
# version_format = "${raw}"
# symbol = "⨀ "
# style = "bold bright-yellow"
