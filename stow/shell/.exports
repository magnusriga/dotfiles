#!/usr/bin/env bash

echo "Running .exports..."

# ================================================================
# Set XDG_CONFIG_HOME, used by various programs.
# `$HOME/.config` is defualt in most program, but set it
# explicitly in case some programs use a different default.
# ================================================================
export XDG_CONFIG_HOME=$HOME/.config

# ================================================================
# Used by programs that support 24-bit colors, like `delta`, `bat`,
# text editors, and modern terminal applications.
# ================================================================
export COLORTERM="truecolor"

# ================================================================
# Set default shell to ZSH.
# ================================================================
SHELL=$(which zsh)

# ================================================================
# Secrets, using command from `.aliases`.
# ================================================================
# - `read <var>`:
#   - Reads single line from standard input, into `<var>`.
#   - Returns 0 if more lines in standard input.
#   - Each next `read` call, reads next line.
# `-r`:
#   - Treat backslash within line as literal character.
#   - Without `-r`, backslash is escape character.
# - `IFS`:
#   - Delemiter for word, aka. field, splitting, within each line.
#   - Note: `read` reads ONE line, `IFS` splits that one line up into fields, aka. words.
#   - `IFS='' | IFS=`: Set IFS to `null`, i.e. no splitting, i.e. `read` assigns line unchanged
#     thus helpful below where line, i.e. environment variable assignment, may contain spaces.
#   - By default, `IFS` is space, tab, and newline, but newline not relevant with `read`,
#     since `read` only reads one single line per call.
#   - When line is split on IFS, e.g. space and tab, each field is assigned to variables
#     following read, e.g. if three fields: `read one two three`.
#   - If more variables than fields, surpurfulous variables set to empty string.
#   - If more fields than variables, then last variable contains field it would normally
#     map to, as well as rest of line, including IFS delimiters,
#     but with final IFS whitespace removed.
# - Result:
#   - Below loop exports each line, as is, without word splitting.
#   - Meaing, without line split on IFS, and with backslash kept as literal character.
# secrets --plain --silent | while IFS='' read -r line; do
#   export "${line:?}"
# done

# ================================================================
# Folder for zsh plugins (no longer use oh-my-zsh).
# ================================================================
export ZSH_HOME="$HOME/.local/share/zsh"

# ================================================================
# Make nvim the default editor.
# ================================================================
# - Before, `EDITOR` would be set to `ed`, a line-based text editor,
#   and `VISUAL` assigned to `vi`, a screen-based editor.
# - `VISUAL` is used by all modern apps and terminals.
# - Set up VISUAL to a full-screen editor such as vi/vim, emacs, nano, and so on.
# - On modern Linux and Unix-like systems, set both `VISUAL` and `EDITOR` to same editor,
#   e.g. vi/vim, emacs, or nano, as some tools only accept `EDITOR` and may not look for `VISUAL`.
# - Almost all modern apps look for `VISUAL` first, and if not found look for `EDITOR`.
# - Avoid differentiating on SSH connection, as we normally develop over SSH.
export EDITOR='nvim'
export VISUAL=$EDITOR
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
#   export VISUAL='vim'
# else
#   export EDITOR='nvim'
# fi

# ================================================================
# `ps` command format.
# ================================================================
# `comm` | `cmd` should go last, they then span screen width.
# To see CPU and MEM info, use `htop`.
export PS_FORMAT="ppid pid comm:25=EXECUTABLE stat:10 euser:15 tname netns:20 docker:10 machine:10 cmd"
# export PS_FORMAT="pid ppid s=STATE euser:15 tty:10 vsz rsz %mem %cpu time:15 stime:12 netns:20 docker:10 machine:10 comm:20=EXECUTABLE cmd"

# ================================================================
# Directories for vim backups, swaps, colors, syntax, undo, etc.
# ================================================================
export VIM_HOME="$HOME/.vim"
export VIM_SESSIONS="$HOME/.vim/sessions"

# ================================================================
# Export WEZTERM_HOME shell variable.
# Subshells, e.g. non-login shells, inherit login shell's environment.
# ================================================================
export WEZTERM_HOME="$HOME/.local/share/wezterm"

# ================================================================
# Export GHOSTTY_RESOURCES_DIR environment variable.
# Used for shell integrations, themes, and more.
# ================================================================
export GHOSTTY_HOME="${BUILD_HOME:-$HOME/build}/repositories/ghostty"
export GHOSTTY_RESOURCES_DIR="$HOME/.local/share/ghostty"

# ================================================================
# Export EZA_HOME shell variable.
# ================================================================
export EZA_HOME="$HOME/.local/share/eza"

# ================================================================
# Directory for build files, i.e. files from `makepkg`.
# Downloaded repositories (manual, containing e.g. `PKGBUILD`): `$HOME/build/repositories`.
# Downloaded source files (automatic by `makepkg`)            : `$HOME/build/sources`.
# Resulting built packages (automatic by `makepkg`)           : `$HOME/build/packages`.
# ================================================================
export BUILD_HOME="$HOME/build"

# ================================================================
# `makepkg` configuration: `$HOME/.config/pacman/makepkg.conf`.
# Pacman configuration must be placed separately in: `/etc/pacman.conf`.
# ================================================================
export PACMAN_HOME="${XDG_CONFIG_HOME:-$HOME/.config}/pacman"

# ================================================================
# Make Google Chrome Default Browser
# ================================================================
export BROWSER=google-chrome

# ================================================================
# Set Ripgrep Configuration File
# ================================================================
export RIPGREP_CONFIG_PATH="$HOME/.ripgreprc"

# ================================================================
# Setup shell history persistence.
# Consider setting in `.shrc`, so variables are created for interactive shells only.
# ================================================================
# Set path to command history file.
HISTFILE="/commandhistory/.shell_history"
# Avoid duplicates in command history.
HISTCONTROL=ignoredups:erasedups
# Allow 32³ entries; the default is 500.
HISTSIZE=32768
SAVEHIST="${HISTSIZE}"
HISTFILESIZE="${HISTSIZE}"
# When shell exits, append to command history file instead of overwriting it.
# - Set for bash in `.bashrc`: `shopt -s histappend`.
# - Set for zsh in `.zshrc`: `setopt INC_APPEND_HISTORY`.
# - Note: For ZSH, commands are appended right away when entered, not only when shell exits.
# After each command, append to command history file and reread it.
# - ghostty, wezterm, and others, modify prompt in shell-integration script,
#   thus keep their setting just remove duplicates and some stray colon at end.
# - Consider turning off reloading of history, i.e. `history -r`,
#   if terminal slows down (should not happen with < 100k entries).
# Check if history command is already in PROMPT_COMMAND to avoid duplication.
if [[ "$PROMPT_COMMAND" != *"history -a; history -c; history -r"* ]]; then
  PROMPT_COMMAND="${PROMPT_COMMAND:+$PROMPT_COMMAND$'\n'}history -a; history -c; history -r"
fi

# ================================================================
# Set `nvm` directory, used in `.profile` to load `nvm`, `node`, `npm`.
# ================================================================
export NVM_DIR="$HOME/.nvm"

# ================================================================
# Enable persistent REPL history for `node`.
# ================================================================
export NODE_REPL_HISTORY=~/.node_history
# Allow 32³ entries; the default is 1000.
export NODE_REPL_HISTORY_SIZE='32768'
# Use sloppy mode by default, matching web browsers.
export NODE_REPL_MODE='sloppy'

# ================================================================
# Make Python use UTF-8 encoding for output to stdin, stdout, and stderr.
# ================================================================
export PYTHONIOENCODING='UTF-8'

# ================================================================
# Prefer US English and use UTF-8.
# ================================================================
export LANG='en_US.UTF-8'
export LC_ALL='en_US.UTF-8'

# ================================================================
# Define colors for terminal output.
# ================================================================
# ANSI color codes
# black='\e[0;30m'
# red='\e[0;31m'
# green='\e[0;32m'
yellow='\e[0;33m'
# blue='\e[0;34m'
# purple='\e[0;35m'
# cyan='\e[0;36m'
# white='\e[0;37m'
# reset='\e[0m'

# ================================================================
# Highlight section titles in manual pages.
# ================================================================
export LESS_TERMCAP_md="${yellow}"

# ================================================================
# Don’t clear the screen after quitting a manual page.
# ================================================================
export MANPAGER='less -X'

# ================================================================
# Set GnuPG home directory, where GnuPG suite stores its keyrings
# and private keys, and reads configurations from.
# ================================================================
export GNUPGHOME="$HOME/.gnupg"

# ================================================================
# Avoid issues with `gpg` as installed via Homebrew.
# https://stackoverflow.com/a/42265848/96656
# ================================================================
GPG_TTY=$(tty)
export GPG_TTY

# ================================================================
# Hide the “default interactive shell is now zsh” warning on macOS.
# ================================================================
export BASH_SILENCE_DEPRECATION_WARNING=1
